{"version":3,"file":"index.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["import axios from 'axios';\nexport const getImagesByQuery = query => {\n  return axios.get('https://pixabay.com/api/', {\n    params: {\n      key: '51348790-b4b99e7923fa7dbd5fd948fd1',\n      q: query,\n      image_type: 'photo',\n      orientation: 'horizontal',\n      safesearch: true,\n    },\n  });\n};\n","export const createMarkup = arr => {\n  return arr\n    .map(\n      ({\n        largeImageURL,\n        tags,\n        webformatURL,\n        likes,\n        views,\n        comments,\n        downloads,\n      }) => {\n        return `<li class=\"gallery-item\">\n\t<a class=\"gallery-link\" href=\"${largeImageURL}\">\n\t\t<img \n        width=\"360\"\n\t\t  class=\"gallery-image\" \n\t\t  src=\"${webformatURL}\" \n\t\t  alt=\"${tags}\" \n\t\t/>\n\t</a>\n        <ul class = \"describtion\">\n        <li class = \"describtion-item\">Likes <p>${likes}</p><li>\n        <li class = \"describtion-item\">Views <p>${views}</p><li>\n        <li class = \"describtion-item\">Downloads <p>${downloads}</p><li>\n        <li class = \"describtion-item\">Comments <p>${comments}</p><li>\n        </ul>\n</li>`;\n      }\n    )\n    .join('');\n};\n","import { getImagesByQuery } from './js/pixabay-api';\nimport { createMarkup } from './js/render-functions';\nimport iziToast from 'izitoast';\nimport SimpleLightbox from 'simplelightbox';\n\nconst formEl = document.querySelector('.form');\nconst galleryEl = document.querySelector('.gallery');\n\nlet lightbox;\nconst onSubmit = e => {\n  let userQuery = null;\n  e.preventDefault();\n  userQuery = formEl.elements['search-text'].value.trim();\n  getImagesByQuery(userQuery)\n    .then(res => {\n      return res.data.hits;\n    })\n    .then(res => {\n      // приходить масив з картинками;\n      if (res.length === 0) {\n        iziToast.error({\n          position: 'topRight',\n          title: 'Error',\n          message: `Sorry, there are no images matching your search query. Please try again!`,\n        });\n      }\n      return galleryEl.insertAdjacentHTML('beforeend', createMarkup(res));\n    })\n    // .then(res => {\n    //   lightbox = new SimpleLightbox('.gallery a', {\n    //     captionsData: 'alt',\n    //     captionDelay: 250,\n    //   });\n    //   lightbox.refresh();\n    // })\n    .catch(err => {\n      console.log(err);\n      iziToast.error({\n        title: 'Error',\n        message: `${err}`,\n      });\n    });\n\n  formEl.reset();\n  galleryEl.innerHTML = '';\n};\n\nformEl.addEventListener('submit', onSubmit);\n"],"names":["getImagesByQuery","query","axios","createMarkup","arr","largeImageURL","tags","webformatURL","likes","views","comments","downloads","formEl","galleryEl","onSubmit","e","userQuery","res","iziToast","err"],"mappings":"6vBACO,MAAMA,EAAmBC,GACvBC,EAAM,IAAI,2BAA4B,CAC3C,OAAQ,CACN,IAAK,qCACL,EAAGD,EACH,WAAY,QACZ,YAAa,aACb,WAAY,EACb,CACL,CAAG,ECVUE,EAAeC,GACnBA,EACJ,IACC,CAAC,CACC,cAAAC,EACA,KAAAC,EACA,aAAAC,EACA,MAAAC,EACA,MAAAC,EACA,SAAAC,EACA,UAAAC,CACR,IACe;AAAA,iCACkBN,CAAa;AAAA;AAAA;AAAA;AAAA,WAInCE,CAAY;AAAA,WACZD,CAAI;AAAA;AAAA;AAAA;AAAA,kDAImCE,CAAK;AAAA,kDACLC,CAAK;AAAA,sDACDE,CAAS;AAAA,qDACVD,CAAQ;AAAA;AAAA,MAIxD,EACA,KAAK,EAAE,ECzBNE,EAAS,SAAS,cAAc,OAAO,EACvCC,EAAY,SAAS,cAAc,UAAU,EAG7CC,EAAWC,GAAK,CACpB,IAAIC,EAAY,KAChBD,EAAE,eAAc,EAChBC,EAAYJ,EAAO,SAAS,aAAa,EAAE,MAAM,OACjDZ,EAAiBgB,CAAS,EACvB,KAAKC,GACGA,EAAI,KAAK,IACjB,EACA,KAAKA,IAEAA,EAAI,SAAW,GACjBC,EAAS,MAAM,CACb,SAAU,WACV,MAAO,QACP,QAAS,0EACnB,CAAS,EAEIL,EAAU,mBAAmB,YAAaV,EAAac,CAAG,CAAC,EACnE,EAQA,MAAME,GAAO,CACZ,QAAQ,IAAIA,CAAG,EACfD,EAAS,MAAM,CACb,MAAO,QACP,QAAS,GAAGC,CAAG,EACvB,CAAO,CACP,CAAK,EAEHP,EAAO,MAAK,EACZC,EAAU,UAAY,EACxB,EAEAD,EAAO,iBAAiB,SAAUE,CAAQ"}